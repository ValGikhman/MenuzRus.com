@model MenuzRus.Models.DesignerModel
@using Services
<link href="@Url.Content("~/Content/designer.css")" rel="stylesheet" />
<link href="@Url.Content("~/Scripts/JQGrid/css/ui.jqgrid.css")" rel="stylesheet" />

<script src="@Url.Content("~/Scripts/jquery/jquery.colpick.js")"></script>
<script src="@Url.Content("~/Scripts/itemProduct.js")"></script>
<script src="@Url.Content("~/Scripts/inventory.js")"></script>
<script src="@Url.Content("~/Scripts/designer.js")"></script>
<script src="@Url.Content("~/Scripts/JQGrid/js/i18n/grid.locale-en.js")"></script>
<script src="@Url.Content("~/Scripts/JQGrid/js/jquery.jqGrid.src.js")"></script>

<div class="well container container-designer shadow">
    <div class="modal-header main-header">
        <div class="default pull-left">
            <div class="dropdown categoryType">
                <button id="btnCategoryType" type="button" class="btn alert-warning btn-lg shadow" data-toggle="dropdown">@Model.CategoryType.ToString()</button>
                <ul id="categoryType" class="dropdown-menu alert-warning" role="menu">
                    @foreach (Common.CategoryType type in (Common.CategoryType[])Enum.GetValues(typeof(Common.CategoryType))) {
                        Int32 value = (Int32)type;
                        <li data-text="@type" data-value="@value"><a href="#">@type</a></li>
                    }
                </ul>
            </div>
        </div>
        <h2>designer</h2>
    </div>

    <div class="clearfix">
        <div class="pull-right" style="margin-top: -65px; margin-right: 5px;">
            <button id="btnNewCategory" type="button" class="btn btn-primary btn-lg shadow" data-toggle="modal" onclick="javascript:editCategory(0)">New category</button>
        </div>
    </div>

    <table id="jqGrid"></table>
</div>
@Html.HiddenFor(m => m.CategoryType)

<script>
    $(function () {
        var expandedEmpGroups = [];
        var urlSelector;

        $(window).on("resize", function () {
            var width = $(".container-designer").width();
            $("#jqGrid").setGridWidth(width);
        });

        $("#categoryType li a").click(function () {
            $("#btnCategoryType").text($(this).text());
            $("#CategoryType").val($(this).parent().attr("data-value"));
            $("#jqGrid").setGridParam({
                url: $.validator.format("{0}Designer/LoadData?type={1}", root, $(this).parent().attr("data-value"))
            }).trigger("reloadGrid");
        });

        urlSelector = $.validator.format("#categoryType li[data-text='{0}']", $("#CategoryType").val());
        $("#jqGrid").jqGrid({
            caption: "Gryd",
            colNames: ["CategoryId", "Category", "itemId", "", "Name", "Description", "Price", "Active"],
            colModel: [
                { name: "categoryId", hidden: true },
                { name: "category" },
                { name: "itemId", hidden: true },
                { name: "action", width: 45, formatter: editButtons },
                { name: "name", width: 130 },
                { name: "description", width: 180, sortable: true },
                { name: "price", width: 30, align: "right", sorttype: "float", formatter: "currency", formatoptions: { prefix: "$", thousandsSeparator: ",'" } },
                { name: "active", align: "center", editable: true, edittype: "checkbox", editoptions: { value: "True:False" }, formatter: "checkbox", width: 20, formatoptions: { disabled: true } }
            ],
            hidegrid: false,
            rowNum: 50,
            rowList: [10, 20, 50, 100],
            width: "90%",
            height: "auto",
            width: null,
            sortable: true,
            sortname: "category",
            sortorder: "desc",
            loadonce: false,
            shrinkToFit: true,
            hoverrows: true,
            autowidth: true,
            datatype: "json",
            caption: "",
            viewrecords: true,
            mtype: 'GET',
            jsonReader: {
                root: "rows",
                page: "page",
                total: "total",
                records: "records",
                repeatitems: false,
                userdata: "userdata"
            },
            url: $.validator.format("{0}Designer/LoadData?type={1}", root, $(urlSelector).attr("data-value")),
            grouping: true,
            groupingView: {
                groupField: ["category"],
                groupColumnShow: [false],
                groupText: [categoryActionButtons() + "<b style='margin-left:25px;'>{0}: - {1} menu items(s)</b>"],
                groupCollapse: true,
                groupOrder: ['asc'],
                groupSummary: [true],
                showSummaryOnHide: false,
                groupDataSorted: true,
                plusicon: "ui-icon-plusthick",
                minusicon: "ui-icon-minusthick"
            },
            loadComplete: function (data) {
                $(".ui-icon").css("margin-top", "5px").css("margin-right", "5px");
                var groups = $("tr.jqgroup");
                groups.each(function (i, e) {
                    var categoryId = $(e).next().find("td:first").text();
                    var categoryName = $($(e).next().find("td:eq(1)")).html();

                    $(e).children().attr("data-value", categoryId);
                    if ($($(e).next().children()[2]).html() == "0") {
                        $($(e).children().children()[3]).html($.validator.format("{0}: - 0 menu items(s)", categoryName));
                        $(e).next().children().remove();
                    }
                });

                var $this = $(this)
                if (expandedEmpGroups.length > 0) {
                    for (var i = 0; i <= expandedEmpGroups.length; i++) {
                        if (typeof (expandedEmpGroups[i]) != "undefined") {
                            $this.jqGrid("groupingToggle", expandedEmpGroups[i]);
                        }
                    }
                }

            },
            onClickGroup: function (hid, collapsed) {
                var i;
                i = $.inArray(hid, expandedEmpGroups) > -1;

                if (!collapsed && i == false) {
                    expandedEmpGroups.push(hid);
                }
                else if (collapsed && i == true) {
                    //Grouphid.splice(i, 1);
                    expandedEmpGroups.splice($.inArray(hid, expandedEmpGroups), 1);
                }

            }
        });

        $("#jqGrid").click(function (e) {
            var $target = $(e.target),
                $groupHeader = $target.closest("tr.jqgroup");

            if ($target.hasClass("btn")) {
                return false;
            }

            if ($groupHeader.length > 0) {
                if (e.target.nodeName.toLowerCase() !== "span" ||
                        (!$target.hasClass("ui-icon-plusthick") && !$target.hasClass("ui-icon-minusthick"))) {
                    $(this).jqGrid("groupingToggle", $groupHeader.attr("id"));
                    return false;
                }
            }
        });
    });

    function editButtons(cellvalue, options, rowObject) {
        var type = $("#btnCategoryType").text();
        var buttons = "";
        buttons = $.validator.format("<button id='editItem' type='button' class='btn btn-info' onclick='javascript:editItem({0})' style='padding:4px; margin-left: 20px !important; margin-right:5px;'><span class='glyphicon glyphicon-pencil'></span></button>", rowObject.itemId);
        if (type!= "Inventory") {
            if(type!= "Product") {
                buttons += $.validator.format("<button id='assosiateItem' type='button' class='btn btn-success' style='padding:4px; margin: 0 5px 0 auto;' onclick='javascript:associateItem({0})'><span class='glyphicon glyphicon-transfer'></span></button>", rowObject.itemId);
            }
            buttons += $.validator.format("<button id='assosiateInventory' type='button' class='btn btn-success' style='padding:4px; margin: 0;' onclick='javascript:associateInventory({0})'><span class='glyphicon glyphicon-barcode'></span></button>", rowObject.itemId);
        }
        return buttons;
    }

    function categoryActionButtons() {
        var object = "$(this).parent()";
        var buttons = $.validator.format("<button id='editCategory' type='button' class='btn btn-info' onclick='javascript:editCategoryHelper({0})'><span class='glyphicon glyphicon-pencil'></span></button>", object);
        buttons += $.validator.format("<button id='addItem' type='button' class='btn btn-info' onclick='javascript:editItemHelper({0})'><span class='glyphicon glyphicon-plus'></span></button>", object);
        return buttons;
    }

    function editCategoryHelper(object) {
        var id = $(object).attr("data-value");
        editCategory(id);
    }

    function editItemHelper(object) {
        var id = $(object).attr("data-value");
        editItem(0, id);
    }
</script>