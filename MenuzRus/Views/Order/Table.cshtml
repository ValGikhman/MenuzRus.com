@model MenuzRus.Models.OrderModel
<link href="@Url.Content("~/Scripts/chosen/chosen.css")" rel="stylesheet" />
<link href="@Url.Content("~/Content/designer.css")" rel="stylesheet" />
<link href="@Url.Content("~/Content/order.css")" rel="stylesheet" />

<script src="@Url.Content("~/Scripts/chosen/chosen.jquery.js")"></script>
<script src="@Url.Content("~/Scripts/table.js")"></script>
<script src="@Url.Content("~/Scripts/JQuery/jquery.json-2.4.min.js")"></script>
<script src="@Url.Content("~/Scripts/JQuery/jquery.jqprint.0.3.js")"></script>

<div class="col-md-11 col-sm-12 container-order shadow center">
    <div class="row">
        <div class="modal-header">
            <h2>Table @Model.Table.Name</h2>
            @Html.Label("Status:")
            <div class="dropdown tableStatus">
                @{
                    Common.TableOrderStatus currentStatus = Common.TableOrderStatus.Closed;
                    if (Model.TableOrder != null) {
                        currentStatus = (Common.TableOrderStatus)Model.TableOrder.Status;
                    }
                }
                <button id="btnTableStatus" type="button" class="btn alert-warning btn-lg" data-toggle="dropdown">@currentStatus.ToString()</button>
                <ul id="tableStatus" class="dropdown-menu alert-warning" role="menu">
                    @foreach (Common.TableOrderStatus status in (Common.TableOrderStatus[])Enum.GetValues(typeof(Common.TableOrderStatus))) {
                        Int32 value = (Int32)status;
                        String disabled = String.Empty;
                        if (Model.TableOrder != null && value <= Model.TableOrder.Status) {
                            disabled = "disabled";
                            if (currentStatus == Common.TableOrderStatus.Closed && value == (Int32)Common.TableOrderStatus.Open) {
                                disabled = String.Empty;
                            }
                        }
                        <li class="@disabled"><a href="#" data-value="@value">@status</a></li>
                    }
                </ul>
            </div>
            <button id="btnAdd" class="add-check btn btn-primary btn-lg shadow pull-right" style="margin-left: 15px;"><i class="glyphicon glyphicon-plus-sign"></i>&nbsp;Add Check</button>
            <button id="btnBack" class="btn btn-primary btn-lg shadow pull-right" style="margin-left: 15px;"><i class="glyphicon glyphicon-arrow-left"></i>&nbsp;Back to floor</button>
        </div>
    </div>
    <div class="layout" style="margin-top: 15px;">
        <div class="shadow menu">
            <ul class="nav nav-pills menu-tab btn-default">
                <li><a id="menuTab" href="#menu-tab" data-toggle="pill">Menu
                </a></li>
                <li><a id="actionsTab" href="#actions-tab" data-toggle="pill">Actions
                </a></li>
            </ul>
            <div class="tab-content order-tabs">
                <div id="menu-tab" class="tab-pane fade in menuItems">
                    @if (Model.Categories != null) {
                        @Html.Partial("_OrderMenuPartial", Model.Categories)
                    }
                </div>
                <div id="actions-tab" class="tab-pane fade in menuActions">
                    @if (Model.Checks != null) {
                        @Html.Partial("_OrderActionsMenuPartial", Model.Checks)
                    }
                </div>
            </div>
        </div>

        <div class="col-md-6 col-sm-6 order pull-right shadow">
        </div>
    </div>
</div>
@Html.HiddenFor(m => m.Table.id)
@Html.HiddenFor(m => m.Table.Name)
@Html.HiddenFor(m => m.TableOrder.id)
@Html.HiddenFor(m => m.TableOrder.Status)
@Html.HiddenFor(m => m.Referer)
@*this 2 used for comments to determine from what button call was made*@
<input id="commentType" type="hidden" />
<input id="parentId" type="hidden" />