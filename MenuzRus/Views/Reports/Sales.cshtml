@model MenuzRus.Models.SalesReportModel
<link href="@Url.Content("~/Content/reports.css")" rel="stylesheet" />
<link href="@Url.Content("~/Content/order.css")" rel="stylesheet" />
<link href="@Url.Content("~/Scripts/JQGrid/css/ui.jqgrid.css")" rel="stylesheet" />
<link href="@Url.Content("~/Scripts/Datepicker/css/datepicker.css")" rel="stylesheet" />
<link href="@Url.Content("~/Content/bootstrap/css/bootstrap-toggle.min.css")" rel="stylesheet" />

<script src="@Url.Content("~/Scripts/JQGrid/js/i18n/grid.locale-en.js")"></script>
<script src="@Url.Content("~/Scripts/JQGrid/js/jquery.jqGrid.src.js")"></script>
<script src="@Url.Content("~/Scripts/Datepicker/js/bootstrap-datepicker.js")"></script>
<script src="@Url.Content("~/Scripts/bootstrap/bootstrap-toggle.min.js")"></script>
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

@{
    System.Globalization.CultureInfo culture = System.Globalization.CultureInfo.CurrentUICulture;
    String sign = culture.NumberFormat.CurrencySymbol;
}

<div class="modal checkViewForm" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header modal-new">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            </div>

            <div id="checkViewForm" class="modal-body" style="height: 450px; overflow: auto;">
            </div>
            <div class="modal-footer">
                <button id="btnCancelCheck" type="button" class="btn btn-default btn-lg" data-dismiss="modal">Close</button>
                @if ((Boolean)Session[Constants.SESSION_PRINTABLE]) {
                    <button id="btnPrintCheck" type="button" class="btn btn-primary btn-lg" data-dismiss="modal">Print</button>
                }
            </div>
        </div>
    </div>
</div>

<div class="well container container-report shadow">
    <div class="modal-header main-header">
        <h2>Sales</h2>
    </div>
    <div class="clearfix">
        <div class="pull-right" style="margin-top: -50px;">
            <input id="graphSwitch" type="checkbox" data-on="Graph" data-off="Report" data-toggle="toggle" data-size="normal" data-onstyle="warning" data-offstyle="success" />
        </div>
    </div>
    <br />
    <div style="width: 450px;">
        <div class="input-group date shadow" id="divDateFrom" data-date="@Model.From.ToShortDateString()" data-date-format="mm/dd/yyyy" style="width: 200px; float: left; cursor: pointer">
            <div class="input-group-addon leiba">From</div>
            <input id="dateFrom" class="add-on form-control input-sm" type="text" value="@Model.From.ToShortDateString()" readonly />
            <span class="input-group-addon add-on glyphicon glyphicon-calendar" style="top: 0px! important"></span>
        </div>
        <div class="input-group date shadow" id="divDateTo" data-date="@Model.To.ToShortDateString()" data-date-format="mm/dd/yyyy" style="width: 200px; float: right; cursor: pointer">
            <div class="input-group-addon leiba">To</div>
            <input id="dateTo" class="add-on form-control input-sm" type="text" value="@Model.To.ToShortDateString()" readonly />
            <span class="input-group-addon add-on glyphicon glyphicon-calendar" style="top: 0px! important"></span>
        </div>
    </div>
    <div style="margin-top: 55px;">
        <table id="jqGrid"></table>
        <div id="chart"></div>
    </div>
</div>
@Html.Hidden("hdCheckId")
<script>
    var graphArray = [];
    var sign = "@sign";

    var data;
    var options = {
        width: 600,
        height: 300,
        legend: { position: "none" },
        axes: {
            x: {
                0: { side: "bottom", label: "Daily chart" } // Top x-axis.
            }
        },
        vAxis: { minValue: 0, format: "decimal", title: "Sales @sign" },
    };

    $(function () {
        //activate chart
        google.charts.load("current", { "packages": ["bar"] });
        google.charts.setOnLoadCallback(drawStuff);

        $("#graphSwitch").bootstrapToggle().change(function () {
            drawStuff();
        })

        var dateFrom = $("#divDateFrom").datepicker({ autoclose: true }).on("changeDate", function (ev) {
            $(".datepicker").hide();
            $("#jqGrid").setGridParam({
                url: getUrl()
            }).trigger("reloadGrid");
        });

        var dateTo = $("#divDateTo").datepicker({ autoclose: true }).on("changeDate", function (ev) {
            $(".datepicker").hide();
            $("#jqGrid").setGridParam({
                url: getUrl()
            }).trigger("reloadGrid");
        });

        $("#jqGrid").jqGrid({
            colNames: ["Check#", "Price", "Tax", "Adjustment", "Total", "Date"],
            colModel: [
                {
                    name: "Check", align: "center", summaryType: "max", summaryTpl: "Subtotal:",
                    formatter: function (cellvalue, options, rowObject) {
                        return $.validator.format("<strong><a href='javascript: showCheck({0})'>{1}</a></strong>", cellvalue.replace("#", ""), cellvalue);
                    }
                },
                { name: "Price", align: "right", formatter: "currency", formatoptions: { prefix: sign, suffix: "", thousandsSeparator: "," }, summaryType: "sum" },
                { name: "Tax", align: "right", formatter: "currency", formatoptions: { prefix: sign, suffix: "", thousandsSeparator: "," }, summaryType: "sum" },
                { name: "Adjustment", align: "right", formatter: "currency", formatoptions: { prefix: sign, suffix: "", thousandsSeparator: "," }, summaryType: "sum" },
                { name: "Total", align: "right", formatter: "currency", formatoptions: { prefix: sign, suffix: "", thousandsSeparator: "," }, summaryType: "sum" },
                { name: "DateModified", align: "center", formatter: 'date', formatoptions: { "srcformat": "m-d-Y H:i:s", "newformat": "m/d/Y" } },
            ],
            hidegrid: false,
            rowNum: 50,
            rowList: [10, 20, 50, 100],
            sortable: false,
            sortname: "",
            sortorder: "",
            height: 500,
            width: null,
            shrinkToFit: true,
            autowidth: true,
            datatype: "json",
            loadonce: false,
            viewrecords: true,
            mtype: "GET",
            jsonReader: {
                repeatitems: false,
                id: "id"
            },
            url: getUrl(),
            footerrow: true,
            userDataOnFooter: true,
            grouping: true,
            groupingView: {
                groupField: ["DateModified"],
                groupColumnShow: [false],
                groupText: ["<b style='margin-left:25px;'>{0}: {1} check(s)</b>"],
                groupCollapse: true,
                groupOrder: ['asc'],
                groupSummary: [true],
                showSummaryOnHide: false,
                groupSummaryPos: ["footer"],
                groupDataSorted: true,
                plusicon: "ui-icon-plus",
                minusicon: "ui-icon-minus"
            },
            loadComplete: function (data) {
                // Save graph data
                graphArray = prepareArrayForGraph(data.graph);

                var groups = $("tr.jqgroup");
                groups.each(function (i, e) {
                    var categoryId = $(e).next().find("td:first").text();
                    $(e).children().attr("data-value", categoryId);
                });
                setGridWidth();
                $(".ui-jqgrid-bdiv").children().css("overflow-x", "hidden");

                var priceSum = $(this).jqGrid("getCol", "Price", false, "sum");
                var taxSum = $(this).jqGrid("getCol", "Tax", false, "sum");
                var totalSum = $(this).jqGrid("getCol", "Total", false, "sum");

                $(this).jqGrid("footerData", "set", {
                    Check: "Total:",
                    Price: priceSum,
                    Tax: taxSum,
                    Total: totalSum
                });

                $("#chart").hide();
                $("#gbox_jqGrid").show();
            },
        });

        $($("#jqGrid")).click(function (e) {
            var $target = $(e.target),
                $groupHeader = $target.closest("tr.jqgroup");

            if ($groupHeader.length > 0) {
                if (e.target.nodeName.toLowerCase() !== "span" ||
                        (!$target.hasClass("ui-icon-plus") && !$target.hasClass("ui-icon-minus"))) {
                    $(this).jqGrid("groupingToggle", $groupHeader.attr("id"));
                    return false;
                }
            }
        });

        $("#btnPrintCheck").on("click", function () {
            var ids = new Array();
            ids.push(parseInt($("#hdCheckId").val()));
            checksPrint(ids);
        });

        function toggleGraph() {
            if ($("#graphSwitch").prop("checked")) {
                $("#chart").show();
                $("#gbox_jqGrid").hide();
            }
            else {
                $("#chart").hide();
                $("#gbox_jqGrid").show();
            }
        }

        function setGridWidth() {
            var width = parseInt($(".container-report").width());
            $("td[aria-describedby='jqGrid_Price']").css("padding-right", 10);
            $("td[aria-describedby='jqGrid_Tax']").css("padding-right", 10);
            $("td[aria-describedby='jqGrid_Adjustment']").css("padding-right", 10);
            $("td[aria-describedby='jqGrid_Total']").css("padding-right", 10);

            $(".ui-icon ").css("margin-top", 2).css("margin-left", 8)
        }

        function getUrl() {
            return $.validator.format("{0}Reports/LoadSalesData?dateFrom={1}&dateTo={2}", root, $("#dateFrom").val(), $("#dateTo").val());
        }

        function drawStuff() {
            if (graphArray.length == 0) {
                return;
            }

            data = google.visualization.arrayToDataTable(graphArray);
            var chart = new google.charts.Bar(document.getElementById("chart"));
            chart.draw(data, google.charts.Bar.convertOptions(options));

            toggleGraph();
        };

        function prepareArrayForGraph(graph) {
            var sales = [];

            if (graph.length > 0) {
                sales.push(new Array("Date", "Sale"));
                $.each(graph, function (key, value) {
                    sales.push(new Array(value.Date, parseFloat(value.Sale)));
                });
            }

            return sales;
        }

    });

    function showCheck(checkId) {
        $("#hdCheckId").val(checkId);
        var container = $(".container-report");
        $(container).block();
        var jqxhr = $.get($.validator.format("{0}Order/ShowCheck", root), { "checkId": checkId }, "json")
         .done(function (result) {
             $("#checkViewForm").html(result);
             $("#btnRegister").hide();

             $(".checkViewForm").modal("show");
         })
         .fail(function () {
             message("::showCheckPrint:: Failed.", "error", "topCenter");
         })
         .always(function () {
             $(container).unblock();
         });
    }
</script>