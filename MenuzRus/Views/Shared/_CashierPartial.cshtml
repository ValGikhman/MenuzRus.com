@model Decimal
<style>
    .btn.active {
        background-color: #797979 !important;
    }

    .calculator {
        position: relative;
        margin: 1em auto;
        display: inline-block;
        width: 100%;
        border-radius: 25px;
    }

    .calc-row {
        text-align: center;
        clear: left;
    }

        .calc-row div.screen {
            text-align: right;
            padding-right: 0.5em;
            border: 2px groove #888;
        }

        .calc-row div {
            line-height: 2;
            text-align: center;
            display: inline-block;
            font-weight: bold;
            font-size: x-large;
            padding: 2% 0;
            margin: 1% 1%;
            cursor: pointer;
            text-shadow: 0px 0px 0 #FFFFFF, 1px 1px 0 #b5b3ac;
        }
</style>

<div class="calc-row">
    <div class="col-lg-11 screen btn-default shadow">@Model.ToString()</div>
</div>

<div  style="height:50vh;">
    <div class="calculator">
        <div class="calc-row">
            <div id="btnCash" class="col-lg-5 btn btn-success shadow active">Cash</div>
            <div id="btnCredit" class="col-lg-5 btn btn-warning shadow">Credit</div>
        </div>

        <div class="calc-row">
            <div class="col-lg-2 but-ton btn-default shadow">C</div>
            <div class="col-lg-2 but-ton btn-default shadow">BS</div>
            <div class="col-lg-2 but-ton btn-default shadow">+/-</div>
            <div id="btnAddPayment" class="col-lg-4 btn-success shadow">ADD</div>
            <div id="blank" class="col-lg-4 btn-default shadow" style="display: none;">ADD</div>
        </div>

        <div class="calc-row">
            <div class="col-lg-2 but-ton btn-default shadow">7</div>
            <div class="col-lg-2 but-ton btn-default shadow">8</div>
            <div class="col-lg-2 but-ton btn-default shadow">9</div>
            <div class="col-lg-4 but-ton btn-default shadow">/</div>
        </div>

        <div class="calc-row">
            <div class="col-lg-2 but-ton btn-default shadow">4</div>
            <div class="col-lg-2 but-ton btn-default shadow">5</div>
            <div class="col-lg-2 but-ton btn-default shadow">6</div>
            <div class="col-lg-4 but-ton btn-default shadow">*</div>
        </div>

        <div class="calc-row">
            <div class="col-lg-2 but-ton btn-default shadow">1</div>
            <div class="col-lg-2 but-ton btn-default shadow">2</div>
            <div class="col-lg-2 but-ton btn-default shadow">3</div>
            <div class="col-lg-4 but-ton btn-default shadow">-</div>
        </div>

        <div class="calc-row">
            <div class="col-lg-2 but-ton btn-default shadow">0</div>
            <div class="col-lg-2 but-ton btn-default shadow">.</div>
            <div class="col-lg-2 but-ton btn-default shadow">+</div>
            <div id="btnEqual" class="col-lg-4 but-ton btn-success shadow">=</div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var updateScreen = function (displayValue) {
        var displayValue = displayValue.toString();
        $(".screen").html(displayValue.substring(0, 10));
    };

    var isNumber = function (value) {
        return !isNaN(value);
    }

    var isOperator = function (value) {
        return value === "/" || value === "*" || value === "+" || value === "-";
    };

    var operate = function (a, b, operation) {
        a = parseFloat(a);
        b = parseFloat(b);
        //console.log(a, b, operation);
        if (operation === "+") return parseFloat(a + b).toFixed(2);
        if (operation === "-") return parseFloat(a - b).toFixed(2);
        if (operation === "*") return parseFloat(a * b).toFixed(2);
        if (operation === "/") return parseFloat(a / b).toFixed(2);
    }

    $(function () {
        var result = @Model;
        var prevEntry = 0;
        var operation = null;
        var currentEntry = "@Model.ToString()";
        updateScreen(result);

        $("#btnCash").width(function(index, currentwidth) {
            $(this).width($.validator.format("{0}%", currentwidth + 3));
        });

        $("#btnCash").on("click", function() {
            if( !$(this).hasClass("active")) {
                $("#btnCredit").removeClass("active");
                $(this).addClass("active");
            }
        });

        $("#btnCredit").on("click", function() {
            if( !$(this).hasClass("active")) {
                $("#btnCash").removeClass("active");
                $(this).addClass("active");
            }
        });

        $("#btnAddPayment").on("click", function (e) {
            template = $("#hidden-template").clone();
            $(template).attr("id", "");
            $(template).addClass("payments");
            $(template).show();

            currentEntry = parseFloat($(".screen").html()).toFixed(2);
            updateScreen(currentEntry);

            $(this).hide();
            $("#blank").show();

            if ($("#btnCredit").hasClass("active")) {
                $(template).find("#name").text("Swipe card please....");
                $(template).find("#btnSave").addClass("hide");
                $(template).find("#btnDelete").removeClass("hide");

                // This in _PaymentsPartial
                activateSwipe();
            }
            else if ($("#btnCash").hasClass("active")) {
                templateData = { cardType: "cash", firstName: "CASH PAYMENT", lastName: "", number: "", expirationMonth: 0, expirationYear: 0 };

                $(template).find("#name").text(templateData.firstName);
                $(template).find("#cardType").addClass(templateData.cardType);

                $(template).find("#btnSave").removeClass("hide");
                $(template).find("#btnDelete").addClass("hide");
            }

            $(template).find("#amountPay").text(currentEntry);

            value = parseFloat(parseFloat($("#checkTotal").html()) + parseFloat(currentEntry)).toFixed(2);
            owe = parseFloat(parseFloat($("#checkAmount").html()) - value).toFixed(2);

            $("#checkTotal").html(value);
            $("#payAmount").html(owe);

            $("#target").prepend(template);
        });

        $(".but-ton").on("click", function (evt) {
            var buttonPressed = $(this).html();

            if (buttonPressed == "C") {
                result = 0;
                currentEntry = "0";
            }

            else if (buttonPressed === "BS") {
                currentEntry = currentEntry.substring(0, currentEntry.length - 1);
                if(currentEntry == "") {
                    currentEntry = "0";
                }
            }

            else if (buttonPressed == "+/-") {
                currentEntry *= -1;
            }

            else if (buttonPressed == ".") {
                if (currentEntry.indexOf(".") == -1) {
                    currentEntry += ".";
                }
            }

            else if (isNumber(buttonPressed)) {
                if (currentEntry == "0") {
                    currentEntry = buttonPressed;
                }
                else {
                    if (isOperator(currentEntry)) {
                        currentEntry = "";
                    }
                    currentEntry = currentEntry + buttonPressed;
                }
            }

            else if (isOperator(buttonPressed)) {
                prevEntry = parseFloat(currentEntry);
                operation = buttonPressed;
                currentEntry = operation;
            }

            else if (buttonPressed == "=") {
                currentEntry = operate(prevEntry, currentEntry, operation);
                operation = null;
            }

            updateScreen(currentEntry);
        })
    });
</script>