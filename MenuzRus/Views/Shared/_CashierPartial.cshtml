@model Decimal
<link href="@Url.Content("~/Content/bootstrap/css/bootstrap-toggle.min.css")" rel="stylesheet" />
<script src="@Url.Content("~/Scripts/bootstrap/bootstrap-toggle.min.js")"></script>

<style>
    .toggle-on, .toggle-off {
        font-size: 30px !important;
    }

    .toggle {
        width: 150px !important;
        height: 60px !important;
    }

    .bat-ton {
        border-radius: 15px;
    }

    .wide {
        width: 154px !important;
    }

    .calculator {
        position: relative;
        margin: 1em auto;
        display: inline-block;
        width: 100%;
        border-radius: 25px;
    }

    .calc-row {
        text-align: center;
    }

        .calc-row div.screen {
            display: inline-block;
            width: 325px;
            text-align: right;
            font-weight: bold;
            font-size: xx-large;
            height: 2.2em;
            padding-right: 0.5em;
            border: 2px groove #888;
            text-shadow: 0px 0px 0 #FFFFFF, 1px 1px 0 #b5b3ac;
        }

        .calc-row div {
            text-align: center;
            display: inline-block;
            font-weight: bold;
            font-size: xx-large;
            padding: 10px 0;
            margin: 7px 5px;
            width: 70px;
            cursor: pointer;
            text-shadow: 0px 0px 0 #FFFFFF, 1px 1px 0 #b5b3ac;
        }
</style>
<div class="modal-header">
    <div class="calc-row">
        <div class="screen but-ton btn-default shadow">@Model.ToString()</div>
    </div>
    <div class="clearfix pull-right" style="margin-top: -70px;">
        <input id="switch" type="checkbox" data-on="Cash" data-off="Credit" data-toggle="toggle" data-size="normal" data-onstyle="warning" data-offstyle="success" />
    </div>
</div>

<div class="center">
    <div class="calculator">
        <div class="calc-row">
            <div class="but-ton btn-default shadow">C</div>
            <div class="but-ton btn-default shadow">BS</div>
            <div id="add" class="btn-success shadow wide">ADD</div>
            <div id="blank" class="btn-default shadow wide" style="display: none;">ADD</div>
        </div>

        <div class="calc-row">
            <div class="but-ton btn-default shadow">7</div>
            <div class="but-ton btn-default shadow">8</div>
            <div class="but-ton btn-default shadow">9</div>
            <div class="but-ton btn-default shadow">/</div>
        </div>

        <div class="calc-row">
            <div class="but-ton btn-default shadow">4</div>
            <div class="but-ton btn-default shadow">5</div>
            <div class="but-ton btn-default shadow">6</div>
            <div class="but-ton btn-default shadow">*</div>
        </div>

        <div class="calc-row">
            <div class="but-ton btn-default shadow">1</div>
            <div class="but-ton btn-default shadow">2</div>
            <div class="but-ton btn-default shadow">3</div>
            <div class="but-ton btn-default shadow">-</div>
        </div>

        <div class="calc-row">
            <div class="but-ton btn-default shadow">0</div>
            <div class="but-ton btn-default shadow">.</div>
            <div class="but-ton btn-default shadow">+</div>
            <div class="but-ton btn-success shadow">=</div>
        </div>
    </div>
</div>
@Html.Hidden("CheckAmount", @Model);

<script type="text/javascript">
    var updateScreen = function (displayValue) {
        var displayValue = displayValue.toString();
        $(".screen").html(displayValue.substring(0, 10));
    };

    var isNumber = function (value) {
        return !isNaN(value);
    }

    var isOperator = function (value) {
        return value === "/" || value === "*" || value === "+" || value === "-";
    };

    var operate = function (a, b, operation) {
        a = parseFloat(a);
        b = parseFloat(b);
        //console.log(a, b, operation);
        if (operation === "+") return parseFloat(a + b).toFixed(2);
        if (operation === "-") return parseFloat(a - b).toFixed(2);
        if (operation === "*") return parseFloat(a * b).toFixed(2);
        if (operation === "/") return parseFloat(a / b).toFixed(2);
    }

    $(function () {
        var result = @Model;
        var prevEntry = 0;
        var operation = null;
        var currentEntry = "@Model.ToString()";
        updateScreen(result);

        $("#add").on("click", function (e) {
            template = $("#hidden-template").clone();
            $(template).attr("id", "");
            $(template).addClass("payments");
            $(template).show();

            currentEntry =  parseFloat($(".screen").html()).toFixed(2);
            updateScreen(currentEntry);

            if (!$("#switch").prop("checked")) {
                $(this).hide();
                $("#blank").show();

                $(template).find("#name").text("Swipe card please....");
                // This in _PaymentsPartial
                activateSwipe();
            }
            else {
                $(template).find("#name").text("CASH PAYMENT");
                $(template).find("#cardType").addClass("cash");

                var checkId = $(".check").find(".tab-pane.active").attr("data-value");
                AddPayment(checkId, "cash", "", "", "", 0, 0, parseFloat($(".screen").html()), $(template));
            }
            $(template).find("#amountPay").text(currentEntry);

            value =  parseFloat(parseFloat($("#checkTotal").html()) + parseFloat(currentEntry)).toFixed(2);
            owe = parseFloat(parseFloat( $("#CheckAmount").val()) - value).toFixed(2);

            $("#checkTotal").html(value);
            $("#payAmount").html(owe);

            $("#target").prepend(template);

        });

        $(".but-ton").on("click", function (evt) {
            var buttonPressed = $(this).html();

            if (buttonPressed == "C") {
                result = 0;
                currentEntry = "0";
            }

            else if (buttonPressed === "BS") {
                currentEntry = currentEntry.substring(0, currentEntry.length-1);
            }

            else if (buttonPressed == ".") {
                if(currentEntry.indexOf(".") == 0 ) {
                    currentEntry += '.';
                }
            }

            else if (isNumber(buttonPressed)) {
                if (currentEntry == "0") {
                    currentEntry = buttonPressed;
                }
                else {
                    if(isOperator(currentEntry)) {
                        currentEntry = "";
                    }
                    currentEntry = currentEntry + buttonPressed;
                }
            }

            else if (isOperator(buttonPressed)) {
                prevEntry = parseFloat(currentEntry);
                operation = buttonPressed;
                currentEntry = operation;
            }

            else if (buttonPressed == "=") {
                currentEntry = operate(prevEntry, currentEntry, operation);
                operation = null;
            }

            updateScreen(currentEntry);
        })
    });
</script>