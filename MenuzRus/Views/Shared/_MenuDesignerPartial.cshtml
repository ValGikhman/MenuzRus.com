@model MenuzRus.Models.DesignerModel
@using Services
@using Extensions
<link href="@Url.Content("~/Content/designer.css")" rel="stylesheet" />
<link href="@Url.Content("~/Content/order.css")" rel="stylesheet" />
@foreach (Services.Category category in Model.Categories) {
    if (category.Items.Any()) {
    <div class="panel panel-default">
        <div class="panel panel-default panel-heading pointer item" data-value="@category.id" onclick="javascript:toggleCategory($(this).find('.collapsibleSign'), '#category-@category.id')">
            <span class="glyphicon glyphicon-plus collapsibleSign"></span>
            @category.Name
        </div>
    </div>
    <div id="category-@category.id" style="display:none">
        <div class="panel associationItem alert-success" data-toggle="buttons">
            @foreach (Services.Item item in category.Items.Where(m => m.Status != (Int32)CommonUnit.Status.NotActive)) {
                Decimal price = (Decimal)item.ItemPrices.OrderByDescending(m => m.DateCreated).Take(1).Select(m => m.Price).FirstOrDefault();
                String selected = String.Empty;
                if (Model.Selected.Any(m => m.ItemId == item.id)) {
                    selected = "active";
                }
                <div id="item.@item.id" class="btn btn-default knopa @selected" data-value="@item.id">
                    <div class="tableNameStatus label alert-warning shadow">@item.Name.Ellipsis(20)</div>

                    @if (!String.IsNullOrEmpty(@item.ImageUrl)) {
                        <img src="@Url.Content(String.Format("~/Images/Menus/{0}/Items/{1}?{2}", Model.MyCompany.id, item.ImageUrl, Guid.NewGuid().ToString("N")))" class="img-thumbnail" />
                        <br />
                    }
                    <span class="label alert-warning shadow priceBadge">$@price</span>
                    <input onchange="javascript:toggleMenuItem(@item.id, this)" class="knopka" type="checkbox" data-value="@item.id" id="@String.Format("{0}", item.id)" />
                </div>
            }
        </div>
    </div>
    }
}

<script>
    function toggleCategory(thisObject, toggleObject) {
        $(toggleObject).toggle();

        if ($(toggleObject).is(":visible"))
            $(thisObject).removeClass("glyphicon-plus").addClass("glyphicon-minus");
        else
            $(thisObject).removeClass("glyphicon-minus").addClass("glyphicon-plus");
    }

    function toggleMenuItem(id, element) {
        $.ajax({
            async: false,
            url: $.validator.format("{0}MenuDesigner/ToggleMenuItem", root),
            data: { "itemId": id, selected: element.checked },
            type: "POST",
            success: function (result) {
            },
            error: function (e) {
                message("::toggleMenuItem:: Failed.", "error", "topCenter");
            }
        });
    }
</script>