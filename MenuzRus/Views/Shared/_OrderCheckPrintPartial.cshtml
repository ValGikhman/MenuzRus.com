@model MenuzRus.Models.CheckPrint
@using Extensions;
@{
    System.Globalization.CultureInfo culture = System.Globalization.CultureInfo.CurrentUICulture;
}
<style>
    #btnRegister {
        -webkit-transform: rotate(270deg);
        -moz-transform: rotate(270deg);
        -o-transform: rotate(270deg);
        -ms-transform: rotate(270deg);
        transform: rotate(270deg);
    }
</style>

<button id="btnRegister" type="button" class="btn btn-warning btn-lg desktopOnly" style="position: fixed; top: 260px; left: -35px;" onclick="javascript: showRegister(@Model.Check.id, @Model.Total)">Register</button>

<div class="print-view-container" style="margin-top: 20px;">
    <table id="tableAddress" class="center">
        <tbody>
            <tr>
                <td>
                    <div class="centered">
                        <img src="data:image/gif;base64,@Model.CompanyImageBase64" />
                    </div>
                </td>
            </tr>
            <tr>
                <td class="companyNameItem" align="center">@Model.MyCompany.Name.ToUpper()</td>
            </tr>
            <tr>
                <td>
                    <div class="addressItem centered">@Model.MyCompany.Address.ToUpper()</div>
                </td>
            </tr>
            <tr>
                <td>
                    @if (!String.IsNullOrEmpty(Model.MyCompany.Address2)) {
                        <div class="addressItem centered">@Model.MyCompany.Address2.ToUpper()</div>
                    }
                </td>
            </tr>
            <tr>
                <td>
                    <div class="addressItem centered">@Model.MyCompany.City.ToUpper(), @Model.MyCompany.State.ToUpper() @Model.MyCompany.Zip</div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="phoneItem centered">@Model.MyCompany.Phone.FormatPhone()</div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="companyNameItem centered">@String.Format("Check #{0} - {1}", Model.Check.id, ((Common.CheckType)Model.Check.Type)).ToUpper()</div>
                </td>
            </tr>
        </tbody>
    </table>

    <table id="tableItems" class="center">
        <tbody>
            @foreach (MenuzRus.Models.LineItem item in Model.Items) {
                <tr>
                    <td class="mainItem">@item.Description
                    </td>
                    <td class="col-md-2 col-sm-2"></td>
                    @{
                String price = item.Price > 0 ? item.Price.ToString("C2", culture) : String.Empty;
                        <td class="mainItem pull-right">@price</td>
                    }
                </tr>
                foreach (MenuzRus.Models.LineItem subItem in item.SubItems) {
                <tr>
                    <td class="subItem">
                        @subItem.Description
                    </td>
                    <td class="col-md-2 col-sm-2"></td>
                    @{
                    price = subItem.Price > 0 ? subItem.Price.ToString("C2", culture) : String.Empty;
                        <td class="subItem pull-right">@price</td>
                    }
                </tr>
                }
            }
            <tr>
                <td colspan="3">
                &nbsp;
                <td>
            </tr>
            <tr>
                <td class="summaryItem">Summary:
                </td>
                <td class="summaryItem col-md-2 col-sm-2"></td>
                <td class="summaryItem pull-right">@Model.Summary.ToString("C2", culture)
                </td>
            </tr>
            @if (Model.AdjustmentPercent != 0) {
                <tr>
                    <td class="ajustmentItem">Adjustment: @Model.AdjustmentPercent.ToString("P")
                    </td>
                    <td class="col-md-2 col-sm-2"></td>
                    <td class="ajustmentItem pull-right">@Model.Adjustment.ToString("C2", culture)
                    </td>
                </tr>
                <tr>
                    <td class="summaryItem">Subtotal:
                    </td>
                    <td class="col-md-2 col-sm-2"></td>
                    <td class="summaryItem pull-right">@Model.Subtotal.ToString("C2", culture)
                    </td>
                </tr>
            }
            <tr>
                <td class="taxItem">Tax: @Model.TaxPercent.ToString("P")
                </td>
                <td class="col-md-2 col-sm-2"></td>
                <td class="taxItem pull-right">@Model.Tax.ToString("C2", culture)
                </td>
            </tr>
            <tr>
                <td class="totalItem">Total:
                </td>
                <td class="col-md-2 col-sm-2"></td>
                <td id="total" class="totalItem pull-right">@Model.Total.ToString("C2", culture)
                </td>
            </tr>
            @if (Model.Split > 1) {
                <tr>
                    <td class="totalItem" style="vertical-align: top; padding-top: 25px;">Split:
                    </td>
                    <td class="col-md-2 col-sm-2"></td>
                    <td class="totalItem pull-right" style="padding-top: 25px;">@Model.Total.ToString("C2", culture)/@Model.Split
                    </td>
                </tr>
                Int32 i = 1;
                foreach (Double split in Model.SplitValues) {
                <tr>
                    <td class="totalItem"></td>
                    <td></td>
                    <td class="totalItem pull-right">@String.Format("{0}: {1}", i, split.ToString("C2", culture))
                    </td>
                </tr>
                    i++;
                }
            }
            <tr>
                <td style="font-size: x-small;">
                    <div>
                        <br />
                        @String.Format("{0}, {1} {2} {3} {4}", Model.CreatedDate.DayOfWeek.ToString().Substring(0, 3), Model.CreatedDate.ToShortDateString(), Model.CreatedDate.ToShortTimeString(), Model.Me.FirstName, Model.Me.LastName.Substring(0, 1))
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
</div>

<div class="modal registerForm" role="dialog">
</div>

<script>
    function showRegister(checkId, total) {
        $("#btnRegister").hide();

        var jqxhr = $.get($.validator.format("{0}Register/Register", root), { "checkId": checkId, "total": total }, "json")
            .done(function (result) {
                $(".registerForm").html(result).modal("show");
            })
            .fail(function () {
                message("::showRegister:: Failed.", "error", "topCenter");
            })
            .always(function () {
            });
    }
</script>