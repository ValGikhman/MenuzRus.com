@model MenuzRus.Models.CheckPrint
@using Extensions;
<div class="print-view-container">
    <table id="tableAddress" class="center">
        <tbody>
            <tr>
                <td class="centered">
                    <br />
                    <img src="@String.Format("http://{0}/{1}", Request.Url.Host, Url.Content(String.Format("~/Images/Menus/{0}/Customers/{1}?{2}", Model.MyCompany.id, Model.MyCompany.ImageUrl, Guid.NewGuid().ToString("N"))))" />
                </td>
            </tr>
            <tr>
                <td class="checkItem centered">
                    <br />
                    CHECK #@Model.Check.id
                </td>
            </tr>
            <tr>
                <td class="companyNameItem centered">
                    @String.Format("Table#{0} - ({1})", Model.Check.TableOrder.TableId, (Common.CheckType)Model.Check.Type)
                </td>
            </tr>
            @if (Model.MyCompany.ImageUrl.IsEmpty()) {
                <tr>
                    <td align="center">@Model.MyCompany.Name.ToUpper()</td>
                </tr>
            }
            <tr>
                <td>
                    <div class="addressItem centered">@Model.MyCompany.Address.ToUpper()</div>
                </td>
            </tr>
            @if (!String.IsNullOrEmpty(Model.MyCompany.Address2)) {
                <tr>
                    <td class="addressItem centered">
                        @Model.MyCompany.Address2.ToUpper()
                    </td>
                </tr>
            }
            <tr>
                <td class="addressItem centered">
                    @Model.MyCompany.City.ToUpper(), @Model.MyCompany.State.ToUpper() @Model.MyCompany.Zip
                </td>
            </tr>
            <tr>
                <td class="phoneItem centered">
                    @Model.MyCompany.Phone.FormatPhone()
                </td>
            </tr>
            <tr>
                <td class="phoneItem centered">
                    @String.Format("{0}, {1} {2}", Model.CreatedDate.DayOfWeek.ToString().Substring(0, 3), Model.CreatedDate.ToShortDateString(), Model.CreatedDate.ToShortTimeString())
                </td>
            </tr>
            <tr>
                <td class="phoneItem centered">
                    @String.Format("Server: {0}{1}", Model.Me.FirstName, Model.Me.LastName.Substring(0, 1))
                </td>
            </tr>
        </tbody>
    </table>

    <table id="tableItems" class="center">
        <tbody>
            @foreach (MenuzRus.Models.LineItem item in Model.Items) {
                <tr>
                    <td class="mainItem">@item.Description
                    </td>
                    <td class="col-md-2 col-sm-2"></td>
                    <td class="mainItem pull-right">@item.Price.ToString("C2")
                    </td>
                </tr>
                foreach (MenuzRus.Models.LineItem subItem in item.SubItems) {
                <tr>
                    <td class="subItem">
                        @subItem.Description
                    </td>
                    <td class="col-md-2 col-sm-2"></td>
                    <td class="subItem pull-right">@subItem.Price.ToString("C2")
                    </td>
                </tr>
                }
            }
            <tr>
                <td colspan="3" style="border-top: solid 1px gray;">
                    <br />
                </td>
            </tr>
            <tr>
                <td class="summaryItem">Summary:
                </td>
                <td class="summaryItem col-md-2 col-sm-2"></td>
                <td class="summaryItem pull-right">@Model.Summary.ToString("C2")
                </td>
            </tr>
            @if (Model.AdjustmentPercent != 0) {
                <tr>
                    <td class="ajustmentItem">Adjustment: @Model.AdjustmentPercent.ToString("P")
                    </td>
                    <td class="col-md-2 col-sm-2"></td>
                    <td class="ajustmentItem pull-right">@Model.Adjustment.ToString("C2")
                    </td>
                </tr>
                <tr>
                    <td class="summaryItem">Subtotal:
                    </td>
                    <td class="col-md-2 col-sm-2"></td>
                    <td class="summaryItem pull-right">@Model.Subtotal.ToString("C2")
                    </td>
                </tr>
            }
            <tr>
                <td class="taxItem">Tax: @Model.TaxPercent.ToString("P")
                </td>
                <td class="col-md-2 col-sm-2"></td>
                <td class="taxItem pull-right">@Model.Tax.ToString("C2")
                </td>
            </tr>
            <tr>
                <td class="totalItem">Total:
                </td>
                <td class="col-md-2 col-sm-2"></td>
                <td id="total" class="totalItem pull-right">@Model.Total.ToString("C2")
                </td>
            </tr>
            @if (Model.Split > 1) {
                <tr>
                    <td class="totalItem" style="vertical-align: top; padding-top: 25px;">Split:
                    </td>
                    <td class="col-md-2 col-sm-2"></td>
                    <td class="totalItem pull-right" style="padding-top: 25px;">@Model.Total.ToString("C2")/@Model.Split
                    </td>
                </tr>
                Int32 i = 1;
                foreach (Double split in Model.SplitValues) {
                <tr>
                    <td class="totalItem"></td>
                    <td></td>
                    <td class="totalItem pull-right">@String.Format("{0}: {1}", i, split.ToString("C2"))
                    </td>
                </tr>
                    i++;
                }
            }
            <tr>
                <td class="col-md-2 col-sm-2"></td>
                <td id="total" class="totalItem pull-right"></td>
            </tr>
        </tbody>
    </table>
</div>