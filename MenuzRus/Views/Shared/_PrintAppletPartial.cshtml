<script src="@Url.Content("~/Scripts/QZPrint/deployJava.js")"></script>
<script type="text/javascript">    var paperLength = 33;    if (deployJava.versionCheck("1.6.0+") || deployJava.versionCheck("1.4") || deployJava.versionCheck("1.5.0*")) {
        QZPrint = true;
        deployQZ();
        useDefaultPrinter();
        message("Printing available for this device.", "warning", "topCenter");
    }
    else {
        QZPrint = false;
        message("No printing available for this device.", "warning", "topCenter");
    }

    function chr(i) {
        return String.fromCharCode(i);
    }

    function devider() {
        qz.append(Array(paperLength).join("-"));
    }

    function line(n) {
        qz.append(Array(n).join("\n"));
    }

    function openCashDrawer() {
        qz.append(chr(27) + "\x70" + "\x30" + chr(25) + chr(25) + "\r");
        qz.print();
    }

    function cutPaper() {
        qz.append(chr(27) + chr(105));       // cut paper
    }

    function boldAndCenter() {
        bold();
        center();
    }

    function bold() {
        qz.append(chr(27) + chr(69) + "1");  // bold on
    }

    function unBold() {
        qz.append(chr(27) + chr(69) + "0");  // bold on
    }

    function center() {
        qz.append(chr(27) + "\x61" + "1"); // center justify
    }

    function left() {
        qz.append(chr(27) + "\x61" + "0"); // left justify
    }

    function right() {
        qz.append(chr(27) + "\x61" + "2"); // right justify
    }

    function deployQZ() {
        var attributes = {
            id: "qz",
            code: "qz.PrintApplet.class",
            archive: "@Url.Content("~/Scripts/QZPrint/qz-print.jar")",
            width: 1,
            height: 1
        };
        var parameters = {
            jnlp_href: "@Url.Content("~/Scripts/QZPrint/qz-print_jnlp.jnlp")",
            cache_option: "plugin",
            disable_logging: "false",
            initial_focus: "false"
        };
        if (deployJava.versionCheck("1.7+") == true) { }
        else if (deployJava.versionCheck("1.6+") == true) {
            delete parameters["jnlp_href"];
        }
        deployJava.runApplet(attributes, parameters, "1.5");
    }

    /**
    * Automatically gets called when applet has loaded.
    */
    function qzReady() {
        // Setup our global qz object
        window["qz"] = document.getElementById('qz');
        if (qz) {
            try {
            }
            catch (err) { // LiveConnect error, display a detailed message
                alert("ERROR:  \nThe applet did not load correctly.  Communication to the " +
                    "applet has failed, likely caused by Java Security Settings.  \n\n" +
                    "CAUSE:  \nJava 7 update 25 and higher block LiveConnect calls " +
                    "once Oracle has marked that version as outdated, which " +
                    "is likely the cause.  \n\nSOLUTION:  \n  1. Update Java to the latest " +
                    "Java version \n          (or)\n  2. Lower the security " +
                    "settings from the Java Control Panel.");
            }
        }
    }

    /**
    * Returns whether or not the applet is not ready to print.
    * Displays an alert if not ready.
    */
    function notReady() {
        // If applet is not loaded, display an error
        if (!isLoaded()) {
            return true;
        }
            // If a printer hasn't been selected, display a message.
        else if (!qz.getPrinter()) {
            message("Printer is not set to default.", "error", "topCenter");
            return true;
        }
        return false;
    }

    /**
    * Returns is the applet is not loaded properly
    */
    function isLoaded() {
        if (!qz) {
            message("Error: Print plugin is NOT loaded!", "error", "topCenter");
            return false;
        } else {
            try {
                if (!qz.isActive()) {
                    message("Error:Print plugin is loaded but NOT active!", "error", "topCenter");
                    return false;
                }
            } catch (err) {
                message("Error: Print plugin is NOT loaded properly!", "error", "topCenter");
                return false;
            }
        }
        return true;
    }
    /**
    * Automatically gets called when "qz.print()" is finished.
    */
    function qzDonePrinting() {
        // Alert error, if any
        if (qz.getException()) {
            message("Error printing:" + qz.getException().getLocalizedMessage(), "error", "topCenter");
            qz.clearException();
            return;
        }

        // Alert success message
        // message("Printed", "success", "topCenter");
    }
    /***************************************************************************
    * Prototype function for finding the "default printer" on the system
    * Usage:
    *    qz.findPrinter();
    *    window['qzDoneFinding'] = function() { alert(qz.getPrinter()); };
    ***************************************************************************/
    function useDefaultPrinter() {
        if (isLoaded()) {
            // Searches for default printer
            qz.findPrinter();

            // Automatically gets called when "qz.findPrinter()" is finished.
            window["qzDoneFinding"] = function () {
                // Alert the printer name to user
                var printer = qz.getPrinter();
                if (printer == null) {
                    $("#menu-actions-print-tab").hide();
                    $("#printTab").hide();
                }
                else {
                    $("#printTab").show();
                }
                // 'Default printer found: "' + printer + '"' :

                // Remove reference to this function
                window["qzDoneFinding"] = null;
            };
        }
    }

    function printRawChecks(data) {
        var checks = $(data);
        qz.appendHex("x1Bx40");     //(Initialize Printer)
        qz.appendHex("x1Bx74x06");  //Cyrillic

        $.each(checks, function (i, e) {
            var element = e;
            var checkItem = $(this).find(".checkItem").html();
            var companyNameItem = $(this).find(".companyNameItem ").html();
            var addressItems = $(this).find(".addressItem");
            var phoneItem = $(this).find(".phoneItem").html();
            var date = "@DateTime.Now.ToLongDateString()";

            qz.appendHex("x1Bx40");     //(Initialize Printer)
            boldAndCenter();
            qz.append($.validator.format("{0}\n", checkItem));
            qz.append($.validator.format("{0}\n", companyNameItem));
            unBold();

            qz.append($.validator.format("{0}\n", phoneItem));
            $.each(addressItems, function () {
                qz.append($.validator.format("{0}\n", $(this).html()));
            });
            line(1);

            // Items
            rows = $(element).find("#tableItems tr");
            left();
            devider();

            var tds;
            var name;
            var price;
            var isSummaryItem;
            var isTaxItem;
            var isTotalItem;
            qz.append($.validator.format("{0}\n", date));
            devider();

            $.each(rows, function () {
                tds = $(this).find("td");
                // Has all 3 tds
                if (tds.length == 3) {
                    name = $(tds)[0];
                    price = $(tds)[2];
                    isMainItem = $(name).hasClass("mainItem");
                    isSubItem = $(name).hasClass("subItem");
                    isSummaryItem = $(name).hasClass("summaryItem");
                    isTotalItem = $(name).hasClass("totalItem");
                    if (typeof (name) != "undefined") {
                        name = $(name).html().replace(/(\r\n|\n|\r)/gm, "").trim().substring(0, 25);
                    }

                    if (typeof (price) != "undefined") {
                        price = $(price).html().replace(/(\r\n|\n|\r|\s)/gm, "");
                    }
                    var len = paperLength - (name + price).length;
                    if (len < 0) len = 0;
                    if (isMainItem) { unBold(); }
                    if (isSubItem) { unBold(); }
                    if (isSummaryItem) {
                        bold();
                        devider();
                    }
                    if (isTaxItem) { unBold(); }
                    if (isTotalItem) { bold(); }
                    qz.append($.validator.format("{0}{1}{2}\n", name, Array(len).join(" "), price));
                }
            });
            line(2);
            devider();
            qz.appendHex("x1Bx4AxC8");  // ESC J n - Prints the buffer and feeds the paper of given amount (200 in this //case)
            qz.print();
        });
    }

    function printData(data) {
        qz.appendHTML("<html>");
        qz.appendHTML(data);
        qz.appendHTML("</html>");
        qz.printHTML();
    }
</script>