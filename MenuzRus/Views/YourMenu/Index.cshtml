@model MenuzRus.Models.YourMenuModel
@using Services
<link href="@Url.Content("~/Content/yourMenu.css")" rel="stylesheet" />
<link href="@Url.Content("~/Scripts/jqwidgets/styles/jqx.bootstrap.css")" rel="stylesheet" />

<div class="modal fade confirmDelete">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                The menu <strong id="menuName"></strong>will be deleted.
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                Would you like to continue?
            </div>
            <div class="modal-footer">
                <button id="btnDeleteMenuCancel" type="button" class="btn btn-default">Cancel</button>
                <button id="btnDeleteMenuOK" type="button" class="btn btn-primary">OK</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade menuRenameForm" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title menuTitle">Menu</h4>
            </div>
            <div id="menuRenameForm" class="modal-body">
                <div class="container">
                    <div class="row">
                        @Html.TextBoxFor(m => m.Menu.Name, new { @class = "form-control input-sm shadow col-md-3", placeholder = "Enter new menu name" })
                    </div>
                    <div class="row">
                        @Html.TextAreaFor(m => m.Menu.Description, new { @class = "form-control input-sm shadow", rows = 5, placeholder = "Enter Item Name Description", type = "text" })
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button id="btnCancelMenu" type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button id="btnSaveMenu" type="button" class="categorySubmit btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade categoryEditForm" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Edit Category</h4>
            </div>
            <div id="categoryEditForm" class="modal-body">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="submit" class="categorySubmit btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade itemEditForm" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Edit Item</h4>
            </div>
            <div id="itemEditForm" class="modal-body">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="submit" class="itemSubmit btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <div id="panel" class="panel panel-default panel-yourmenu shadow">
        <div class="panel-heading">
            <div id="default">
                @Html.DropDownListFor(m => m.Menu.id, new SelectList(Model.Menus, "id", "Name"), new { @class = "form-control input-sm shadow col-md-3" })
                <button id="btnNewMenu" type="button" class="btn btn-primary  btn-sm shadow">New menu</button>
                <button id="btnRenameMenu" type="button" class="btn btn-primary  btn-sm shadow">Rename menu</button>
                <button id="btnDeleteMenu" type="button" class="btn btn-primary  btn-sm shadow">Delete menu</button>
                <button id="btnMenuIt" type="button" class="btn btn-primary  btn-sm shadow">Menu-it</button>
                <div class=" pull-right">
                    <button id="btnNewCategory" type="button" class="btn btn-primary  btn-sm shadow" data-toggle="modal">New category</button>
                    <button id="btnNewItem" type="button" class="btn btn-primary  btn-sm shadow" data-toggle="modal">New item</button>
                </div>
            </div>
        </div>
        <div class="panel-yourmenu-body">
            <div class="wall">
                <div class="col-md-3 page">
                    <a href="/Customer/Index/@Model.MyCompany.id">
                        @if (!String.IsNullOrEmpty(@Model.MyCompany.ImageUrl)) {
                            <div>
                                <img src="@Url.Content(String.Format("/Images/Menus/{0}/Customer/{1}?{2}", @Model.MyCompany.id, @Model.MyCompany.ImageUrl, Guid.NewGuid().ToString("N")))" class="logo" />
                            </div>
                        }
                        <h2>@Model.MyCompany.Name</h2>
                        <h3>Welcomes you</h3>
                        <div class="address">
                            <strong>@Model.MyCompany.Name</strong><br>
                            @Model.MyCompany.Address<br>
                            @Model.MyCompany.City, @Model.MyCompany.State @Model.MyCompany.Zip<br>
                            @Model.MyCompany.Phone
                        </div>
                    </a>
                </div>
                <div class="col-md-3 page">
                    @ShowPage(Model, Common.Side.Left)
                </div>

                <div class="col-md-3 page">
                    @ShowPage(Model, Common.Side.Center)
                </div>

                <div class="col-md-3 page">
                    @ShowPage(Model, Common.Side.Right)
                </div>
            </div>
            <ul class="nav nav-pills">
                <li class="active"><a href="#pageTab" data-toggle="tab">Page background</a>
                </li>
                <li><a href="#wallTab" data-toggle="tab">Wall background</a>
                </li>
            </ul>

            <!-- Tab panes -->
            <div class="tab-content">
                @{Uri urlRoot = new Uri(Server.MapPath("~"));}
                <div class="tab-pane fade in active" id="pageTab">
                    @{
                        foreach (String file in Model.PageBackgrounds) {
                            Uri urlPath = new Uri(file);
                        <img src="/@urlRoot.MakeRelativeUri(urlPath).ToString()" class="img-page img-thumbnail" />
                        }
                    }
                </div>

                <div class="tab-pane fade in" id="wallTab">
                    @{
                        foreach (String file in Model.Wallpapers) {
                            Uri urlPath = new Uri(file);
                        <img src="/@urlRoot.MakeRelativeUri(urlPath).ToString()" class="img-wall img-thumbnail" />
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@helper ShowPage(MenuzRus.Models.YourMenuModel Model, Common.Side side) {
    <ul class="category-group">
        @foreach (Category category in Model.Categories.Where(m => m.Side == side.ToString()).ToList()) {
            <li data-value="@category.id">
                <a href="javascript:editCategory(@category.id)">
                    @if (!String.IsNullOrEmpty(category.Name)) {
                        <div class="category">
                            @category.Name
                        </div>
                    }
                    @if (!String.IsNullOrEmpty(@category.ImageUrl)) {
                        <div>
                            <img src="@Url.Content(String.Format("/Images/Menus/{0}/Categories/{1}?{2}", Model.MyCompany.id, category.ImageUrl, Guid.NewGuid().ToString("N")))" class="categoryImage" />
                        </div>
                    }
                    @if (!String.IsNullOrEmpty(@category.Description)) {
                        <div class="categoryDescription">@category.Description</div>
                    }
                </a>
                @if (category.Items != null && !String.IsNullOrEmpty(category.Name)) {
                    <ul class="items-group">
                        @foreach (Item item in category.Items.OrderBy(m => m.SortOrder)) {
                            <li  data-value="@item.id">
                                <a href="javascript:editItem(@item.id)">
                                    @if (!String.IsNullOrEmpty(@item.ImageUrl)) {
                                        <img src="@Url.Content(String.Format("/Images/Menus/{0}/Items/{1}?{2}", Model.MyCompany.id, item.ImageUrl, Guid.NewGuid().ToString("N")))" class="itemImage" />
                                    }
                                    <div class="item" data-value="@item.id">@item.Name</div>
                                    @if (!String.IsNullOrEmpty(item.Description)) {
                                        <div class="itemDescription">@item.Description </div>
                                    }
                                    <div class="price">@item.ShowAsPrice</div>
                                </a>
                            </li>
                        }
                    </ul>
                }
            </li>
        }
    </ul>
}
<script>
    $(function () {
        var bg = "url(/Images/Backgrounds/Pages/preview/@Model.Settings[Common.Settings.PageBackground.ToString()]) no-repeat";
        $(".page").css("background", bg);

        bg = bg = "url(/Images/Backgrounds/Wall/@Model.Settings[Common.Settings.WallBackground.ToString()]) repeat";
        $(".wall").css("background", bg)

        $(".img-wall").click(function () {
            var bg = "url(" + $(this).attr("src").replace("thumbnails/", "") + ") repeat";
            $(".wall").css("background", bg)
            var wallbackground = {
                Type: "wallbackground",
                Value: $(this).attr("src")
            };

            var jqxhr = $.post("/YourMenu/SaveSettings/", wallbackground)
                      .done(function (result) {
                      })
                      .fail(function (e) {
                      })
                      .always(function () {
                      });
        })

        $(".img-page").click(function () {
            var bg = "url(" + $(this).attr("src").replace("thumbnails/", "preview/") + ") no-repeat";
            $(".page").css("background", bg);
            var pagebackground = {
                Type: "pagebackground",
                Value: $(this).attr("src")
            };

            var jqxhr = $.post("/YourMenu/SaveSettings/", pagebackground)
                      .done(function (result) {
                          alert(result);
                      })
                      .fail(function () {
                      })
                      .always(function () {
                      });
        });

        $(".category-group").sortable({
            stop: function (e, ui) {
                var cats = [];
                $(this).children().each(function (i) {
                    var li = $(this);
                    cats.push(li.attr("data-value"));
                });

                var postData = { ids: cats.join(), type: "Category" };
                var jqxhr = $.post("/YourMenu/SaveOrder/", postData)
                              .done(function (result) {
                              })
                .fail(function () {
                })
                .always(function () {
                });
            }
        }).disableSelection();

        $(".items-group").sortable({
            stop: function (e, ui) {
                var items = [];
                $(this).children().each(function (i) {
                    var li = $(this);
                    items.push(li.attr("data-value"));
                });

                var postData = { ids: items.join(), type: "Items" };
                var jqxhr = $.post("/YourMenu/SaveOrder/", postData)
                              .done(function (result) {
                              })
                .fail(function () {
                })
                .always(function () {
                });
            }
        }).disableSelection();

        $(".categorySubmit").click(function () {
            $("#form-category").submit();
        });

        $(".itemSubmit").click(function () {
            $("#form-item").submit();
        });

        $("#btnNewCategory").click(function () {
            editCategory(0);
        })

        $("#btnNewItem").click(function () {
            editItem(0);
        })

        $("#Menu_id").change(function () {
            window.location = "/YourMenu/Index/" + $(this).val();
        })

        $("#btnNewMenu").click(function () {
            $("#Menu_id").val(0);
            $("#Menu_Name").val("");
            $(".menuTitle").html("New menu");
            $(".menuRenameForm").modal("show");
        })

        $("#btnRenameMenu").click(function () {
            $(".menuTitle").html("Rename menu");
            $(".menuRenameForm").modal("show");
        })

        $("#btnDeleteMenu").click(function () {
            $(".confirmDeleteMenu").modal("show");
            deleteMenu($("#Menu_id").val());
        })

        $("#btnDeleteMenuCancel").click(function () {
            $(".confirmDeleteMenu").modal("hide");
        })

        $("#btnDeleteMenuOK").click(function () {
            deleteMenu($("#Menu_id").val());
        })

        $("#btnCancelMenu").click(function () {
            $("#Menu_id").val(@Model.Menu.id);
            $("#Menu_Name").val("@Model.Menu.Name");
        })

        $("#btnSaveMenu").click(function () {
            $(".menuRenameForm").modal("hide");
            editMenu($("#Menu_id").val(), $("#Menu_Name").val());
        })

        $("#btnMenuIt").click(function () {
            window.open("/Menu/Index/" + $("#Menu_id").val(), "");
        })

    })

    function editMenu(id, name) {
        if (id == null) id = 0;
        var postData = { id: id, name: name };
        var jqxhr = $.post("/YourMenu/SaveMenu/", postData)
                      .done(function (result) {
                          window.location = "/YourMenu/Index/" + result;
                      })
        .fail(function () {
        })
        .always(function () {
        });
    }

    function deleteMenu(id) {
        if (id == null) id = 0;
        var postData = { id: id };
        var jqxhr = $.post("/YourMenu/DeleteMenu/", postData)
                      .done(function (result) {
                          window.location = "/YourMenu";
                      })
        .fail(function () {
        })
        .always(function () {
        });
    }

    function editCategory(id) {
        var jqxhr = $.get("/Category/EditCategory/", { id: id })
                      .done(function (result) {
                          $("#categoryEditForm").html(result);
                          $(".categoryEditForm").modal("show");
                      })
        .fail(function () {
        })
        .always(function () {
        });
    }

    function editItem(id) {
        var jqxhr = $.get("/Item/EditItem/", { id: id })
                      .done(function (result) {
                          $("#itemEditForm").html(result);
                          $(".itemEditForm").modal("show");
                      })
        .fail(function () {
        })
        .always(function () {
        });
    }
</script>